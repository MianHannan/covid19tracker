{"version":3,"sources":["components/Header.jsx","components/NumberCard.jsx","components/NumberCards.jsx","components/Charts.jsx","App.js","index.js"],"names":["Header","gData","React","useContext","GlobalData","className","src","document","URL","alt","FormControl","InputLabel","htmlFor","style","color","Select","native","onChange","e","setCountry","target","value","country","data","Countries","map","item","index","Country","NumberCard","props","Paper","elevation","name","fontSize","backgroundColor","padding","height","width","Typography","variant","today","margin","display","total","NumberCards","Global","NewConfirmed","TotalConfirmed","NewRecovered","TotalRecovered","NewDeaths","TotalDeaths","Charts","chartData","labels","datasets","label","fill","lineTension","borderColor","borderCapStyle","borderDash","borderDashOffset","borderJoinStyle","pointBorderColor","pointBackgroundColor","pointBorderWidth","pointHoverRadius","pointHoverBackgroundColor","pointHoverBorderColor","pointHoverBorderWidth","pointRadius","pointHitRadius","createContext","App","useState","isFetched","setIsFetched","setData","message","setMessage","useEffect","fetch","then","response","json","Message","Provider","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.616e3747.chunk.js","sourcesContent":["import React from 'react'\r\nimport { FormControl, InputLabel, Select } from '@material-ui/core'\r\nimport { GlobalData } from '../App'\r\n\r\n\r\nexport const Header = () => {\r\n\r\n    const gData = React.useContext(GlobalData);\r\n\r\n\r\n    return (\r\n        <div className='container header'>\r\n            <div className='row'>\r\n                <div className='col-md-9 left-align'>\r\n                    <img src={document.URL + '/logo.png'} alt='COVID19 TRACKER' />\r\n                </div>\r\n                <div className='col-md-2'>\r\n                    <FormControl>\r\n                        <InputLabel htmlFor=\"age-native-simple\" style={{ color: '#000' }}>Country</InputLabel>\r\n                        <Select native onChange={e => gData.setCountry(e.target.value)}>\r\n                            <option value={gData.country}>Global</option>\r\n                            {gData.data.Countries.map((item, index) =>\r\n                                <option key={index} value={index}>{item.Country}</option>\r\n                            )}\r\n\r\n                        </Select>\r\n                    </FormControl>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport { Paper, Typography } from '@material-ui/core'\r\n\r\n//icons\r\nimport AirlineSeatIndividualSuiteIcon from '@material-ui/icons/AirlineSeatIndividualSuite';\r\nimport EmojiPeopleIcon from '@material-ui/icons/EmojiPeople';\r\nimport CloseIcon from '@material-ui/icons/Close';\r\n\r\nexport const NumberCard = (props) => {\r\n\r\n    return (\r\n        <div>\r\n            <Paper elevation={3} className='ncPaper' >\r\n                <div className='row'>\r\n                    <div className=\"col-4\">\r\n                        <Paper\r\n                            className='iconPaper'\r\n                            elevation={3}\r\n                        >\r\n                            {props.name === \"infected\" && <AirlineSeatIndividualSuiteIcon className='icon' style={{ fontSize: '80px', backgroundColor: '#ff9201', padding: '5px', height: '90px', width: '90px' }} />}\r\n                            {props.name === \"recovered\" && <EmojiPeopleIcon className='icon' style={{ fontSize: '90px', backgroundColor: '#4fae54', padding: '5px', height: '90px', width: '90px' }} />}\r\n                            {props.name === \"dead\" && <CloseIcon className='icon' style={{ fontSize: '90px', backgroundColor: '#ee473f', padding: '5px', height: '90px', width: '90px' }} />}\r\n                        </Paper>\r\n                    </div>\r\n                    <div className=\"col-8\">\r\n                        <Typography variant='button'>{props.name}</Typography>\r\n                        <Typography variant='h4'>{props.today}</Typography>\r\n                    </div>\r\n                </div>\r\n                <hr style={{ margin: '0 10px' }} />\r\n                <Typography variant='button' display='inline' style={{ fontSize: '20px' }}>Total : </Typography>\r\n                <Typography variant='h6' display='inline'>{props.total}</Typography>\r\n            </Paper>\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport { NumberCard } from './NumberCard'\r\nimport { GlobalData } from '../App'\r\n\r\nexport const NumberCards = () => {\r\n\r\n    const gData = React.useContext(GlobalData);\r\n\r\n    return (\r\n        <div className=\"container numberCards\">\r\n            <div className='row'>\r\n                <div className='col-lg-4'>\r\n                    <NumberCard\r\n                        name=\"infected\"\r\n                        today={gData.country === \"Global\" ? gData.data.Global.NewConfirmed : gData.data.Countries[gData.country].NewConfirmed}\r\n                        total={gData.country === \"Global\" ? gData.data.Global.TotalConfirmed : gData.data.Countries[gData.country].TotalConfirmed}\r\n                    />\r\n                </div>\r\n                <div className='col-lg-4'>\r\n                    <NumberCard\r\n                        name=\"recovered\"\r\n                        today={gData.country === \"Global\" ? gData.data.Global.NewRecovered : gData.data.Countries[gData.country].NewRecovered}\r\n                        total={gData.country === \"Global\" ? gData.data.Global.TotalRecovered : gData.data.Countries[gData.country].TotalRecovered}\r\n                    />\r\n                </div>\r\n                <div className='col-lg-4'>\r\n                    <NumberCard\r\n                        name=\"dead\"\r\n                        today={gData.country === \"Global\" ? gData.data.Global.NewDeaths : gData.data.Countries[gData.country].NewDeaths}\r\n                        total={gData.country === \"Global\" ? gData.data.Global.TotalDeaths : gData.data.Countries[gData.country].TotalDeaths}\r\n                    />\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport { Bar, Pie } from 'react-chartjs-2'\r\nimport { GlobalData } from '../App'\r\n\r\n\r\nexport const Charts = () => {\r\n\r\n    const gData = React.useContext(GlobalData);\r\n\r\n    const data24 = [\r\n        gData.country === \"Global\" ? gData.data.Global.NewConfirmed : gData.data.Countries[gData.country].NewConfirmed,\r\n        gData.country === \"Global\" ? gData.data.Global.NewRecovered : gData.data.Countries[gData.country].NewRecovered,\r\n        gData.country === \"Global\" ? gData.data.Global.NewDeaths : gData.data.Countries[gData.country].NewDeaths\r\n    ]\r\n\r\n\r\n\r\n    const chartData = {\r\n        labels: ['INFECTED', 'RECOVERED', 'DEAD'],\r\n        datasets: [\r\n            {\r\n                label: \"Status in Last 24 Hours\",\r\n                fill: false,\r\n                lineTension: 0.1,\r\n                backgroundColor: ['rgba(255, 146, 1,0.8)', 'rgba(79, 174, 84,0.8)', 'rgba(238, 71, 63,0.8)'],\r\n                borderColor: '#ccc',\r\n                borderCapStyle: 'butt',\r\n                borderDash: [],\r\n                borderDashOffset: 0.0,\r\n                borderJoinStyle: 'miter',\r\n                pointBorderColor: 'rgba(75,192,192,1)',\r\n                pointBackgroundColor: '#fff',\r\n                pointBorderWidth: 1,\r\n                pointHoverRadius: 5,\r\n                pointHoverBackgroundColor: 'rgba(75,192,192,1)',\r\n                pointHoverBorderColor: 'rgba(220,220,220,1)',\r\n                pointHoverBorderWidth: 2,\r\n                pointRadius: 1,\r\n                pointHitRadius: 10,\r\n                data: data24\r\n            }\r\n        ]\r\n    };\r\n\r\n    return (\r\n        <div className='container chartBox'>\r\n            <div className=\"row\">\r\n                <div className=\"col-lg-6\">\r\n                    <Bar data={chartData} />\r\n                </div>\r\n                <div className=\"col-lg-6\">\r\n                    <Pie data={chartData} />\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\n","import React from 'react'\nimport { Header } from './components/Header'\nimport { NumberCards } from './components/NumberCards'\nimport { Charts } from './components/Charts'\n\n\nexport const GlobalData = React.createContext({});\n\nexport const App = () => {\n\n  const [isFetched, setIsFetched] = React.useState(false);\n  const [data, setData] = React.useState({});\n\n  const [message, setMessage] = React.useState(\"\");\n  const [country, setCountry] = React.useState(\"Global\");\n\n  React.useEffect(() => {\n    fetch('https://api.covid19api.com/summary')\n      .then(response => response.json())\n      .then(data => {\n        if (data.Message === \"\") {\n          setData(data);\n          setIsFetched(true);\n        }\n        else {\n          setMessage(\"Error Refresh the Page API message : \" + data.Message);\n        }\n      })\n  }, [])\n\n  if (isFetched === false) {\n    return (\n      <div>\n        <div className='loader'>\n          <img src={document.URL + '/favicon.ico'} alt='Loading' />\n        </div>\n        <h1>{message}</h1>\n      </div>\n\n    )\n  } else {\n    return (\n      <GlobalData.Provider value={{\n        data: data,\n        setData: setData,\n        country: country,\n        setCountry: setCountry\n      }}>\n        <Header />\n        <NumberCards />\n        <Charts />\n      </GlobalData.Provider>\n    )\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport './index.css';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}